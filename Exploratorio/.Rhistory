names(co2) <- c("country", "country_code","co2")
co2$co2[co2$co2 == -99 | co2$co2  == ".."] <- NA
co2 <- correct_names(co2)
co2$country <- NULL
mydata <- merge(mydata,co2, on = "country_code", all = T)
productivity <- read_csv("productivity_wb.csv") #as measured by GDP per person employed.
productivity <- productivity[ , c(3, 4, 5)]
names(productivity) <- c("country", "country_code", "productivity")
productivity$productivity[productivity$productivity == -99 | productivity$productivity == ".."] <- NA
productivity <- correct_names(productivity)
productivity <- add_code_absent(productivity)
productivity$country <- NULL
mydata <- merge(mydata, productivity, on = "country_code", all = T)
innovation_and_fin_health <- read_csv("innovation_and_debt.csv")
head(innovation_and_fin_health)
innovation_and_fin_health <- innovation_and_fin_health[ , 3:ncol(innovation_and_fin_health)]
names(innovation_and_fin_health) <- c("country", "country_code", "sci_jour", "patent_nr", "patent_r", "trademark app", "hightech_exp", "int_prop", "credit_inf", "food_deficit", "imf_charges", "int_forgiven")
innovation_and_fin_health[innovation_and_fin_health == ".." | innovation_and_fin_health == -99] <- NA
innovation_and_fin_health <- correct_names(innovation_and_fin_health)
innovation_and_fin_health <- add_code_absent(innovation_and_fin_health)
innovation_and_fin_health$country <- NULL
mydata <- merge(mydata, innovation_and_fin_health, on = "country_code", all = T)
renewable_energy <- read_csv("renewable_energy.csv")
renewable_energy <- renewable_energy[ , 3:ncol(renewable_energy)]
names(renewable_energy) <- c("country", "country_code", "renew_en_%", "renew_electr")
renewable_energy <- correct_names(renewable_energy)
renewable_energy <- add_code_absent(renewable_energy)
renewable_energy$country <- NULL
mydata <- merge(mydata, renewable_energy, on = "country_code", all = T)
library(WHO)
library(rgho)
library(plyr)
library(dplyr)
require(tidyr)
infant_mortality_rate <- data.frame(get_data("MDG_0000000001"))
inf_mort_rate <-  infant_mortality_rate %>%
group_by(country) %>%
group_by(year, add = T) %>%
filter(year >= 2010) %>%
select(country, value) %>%
filter(!is.na(country)) %>%
spread(year, value)
inf_mort_rate$inf_mort_rate <- inf_mort_rate$`2017`
inf_mort_rate <- inf_mort_rate[ , c("country", "inf_mort_rate")]
inf_mort_rate <- correct_names(inf_mort_rate)
inf_mort_rate$country_code <- countrycode(inf_mort_rate$country, "country.name", "iso3c")
inf_mort_rate <- add_code_absent(inf_mort_rate)
sanitation_services <- read.csv("sanitation_services.csv")
names(sanitation_services) <- c("country", "sanitation_services")
sanitation_services <- sanitation_services[!is.na(sanitation_services$country), ]
sanitation_services$country <- as.character(sanitation_services$country)
sanitation_services <- correct_names(sanitation_services)
sanitation_services$country_code <- countrycode(sanitation_services$country, "country.name", "iso3c")
sanitation_services <- add_code_absent(sanitation_services)
inf_mort_rate$country <- NULL
sanitation_services <- NULL
who_df <- merge(inf_mort_rate, sanitation_services, on = "country_code", all = T)
deaths_for_household_pollution <- read.csv("deaths_for_household_pollution.csv", sep = ",", fileEncoding = "utf-8", stringsAsFactors = F)
deaths_for_household_pollution$Value <- as.numeric(gsub(' .*', "", deaths_for_household_pollution$Value))
deaths_for_household_pollution <- deaths_for_household_pollution[deaths_for_household_pollution$Cause == "Total", ]
names(deaths_for_household_pollution) <- c("country", "cause", "deaths_household_pollution")
deaths_for_household_pollution$cause <- NULL
deaths_for_household_pollution <- deaths_for_household_pollution[!is.na(deaths_for_household_pollution$country), ]
deaths_for_household_pollution <- correct_names(deaths_for_household_pollution)
deaths_for_household_pollution$country_code <- countrycode(deaths_for_household_pollution$country, "country.name", "iso3c")
deaths_for_household_pollution <- add_code_absent(deaths_for_household_pollution)
deaths_for_household_pollution$country <- NULL
who_df <- merge(who_df, deaths_for_household_pollution, on = "country_code", all = T)
water <- read.csv("water.csv", stringsAsFactors = F)
names(water) <- c("country", "water")
water <- water[!is.na(water$country), ]
water <- correct_names(water)
water$country_code <- countrycode(water$country, "country.name", "iso3c")
water <- add_code_absent(water)
water$country <- NULL
who_df <- merge(who_df, water, on = "country_code", all = T)
require(tidyr)
library(plyr)
require(dplyr)
energy_wb <- read_csv("energy_wb.csv")
energy_wb <- energy_wb[1:460, c(1, 3:6)]
names(energy_wb) <- c("year", "country", "country_code", "electricity", "clean_fuels")
library(data.table) ## v >= 1.9.6
energy_wb <- dcast(setDT(energy_wb), country ~ year, value.var = c("electricity", "clean_fuels"))
energy_wb[energy_wb == ".." | energy_wb == -99] <- NA
energy_new <- data.frame(energy_wb)
for(column in c("electricity", "clean_fuels")) {
nombre_real <- paste0(column, "_2016")
for (i in 1:nrow(energy_wb)) {
if(is.na(energy_new[i, nombre_real])) {
if(!is.na(energy_new[i, paste0(column, "_2015")])) {
energy_new[i, nombre_real] <- energy_new[i, paste0(column, "_2015")]
} else {
next
}
}
}
}
energy_wb <- correct_names(energy_wb)
energy_new$country_code <- countrycode(energy_new$country, "country.name", "iso3c")
energy_new <- add_code_absent(energy_new)
energy_new <- energy_new[!is.na(energy_new$country_code), ]
energy_new$electricity_2015 <- NULL
energy_new$clean_fuels_2015 <- NULL
energy_new$country <- NULL
mydata <- merge(mydata, energy_new, on = "country_code", all = T)
mydata <- merge(mydata, who_df, on = "country_code", all = T)
#codes_and_countries <- mydata[ , c("country", "country_code")]
#mydata$country_code <- NULL
additional_un_vars <- country_profile_vars[ , c("country_code", "Fertility.rate..total..live.births.per.woman.", "Life.expectancy.at.birth..females.males..years.", "Urban.population.growth.rate..average.annual...", "International.trade..Balance..million.US..", "Employment..Agriculture....of.employed.", "Economy..Agriculture....of.GVA.", "Economy..Industry....of.GVA.")]
additional_un_vars[additional_un_vars== ".." | additional_un_vars == "..." | additional_un_vars == -99 | additional_un_vars == ".../..."] <- NA
names(additional_un_vars) <- c("country_code", "fert_rate", "life_exp", "urban_pop_growth", "int_tr_bal", "emp_agr", "eco_agr", "eco_ind")
life_exp <- c()
for (i in 1:nrow(additional_un_vars)) {
if(!is.na(additional_un_vars[i, "life_exp"])) {
fem <- as.numeric(gsub("/.*", "", additional_un_vars[i, "life_exp"]))
mas <- as.numeric(gsub(".*/", "", additional_un_vars[i, "life_exp"]))
media <- (fem + mas) / 2
life_exp <- c(life_exp, media)
} else {
life_exp <- c(life_exp, NA)
}
}
additional_un_vars$life_exp <- life_exp
mydata <- merge(mydata, additional_un_vars, on = "country_code", all = T)
vulner_empl <- read_csv("vulnerable_employment.csv")
vulner_empl <- vulner_empl[1:217 , 3:ncol(vulner_empl)]
names(vulner_empl) <- c("country", "country_code", "vulner_empl")
vulner_empl[vulner_empl == ".." | vulner_empl == -99] <- NA
vulner_empl$country <- NULL
mydata <- merge(mydata, vulner_empl, on = "country_code", all = T)
prop_miss <- function(x){sum(is.na(x))/length(x)*100}
apply(mydata,2,prop_miss)
apply(mydata,1,prop_miss)
get_noisy_countries <- function(df) {
require(lava)
if ("country" %ni% names(df)) {
noisy_countries <- c()
for(i in 1:nrow(df)) {
if(sum(is.na(df[i, ])) / ncol(df) > 0.3) {
noisy_countries <- c(noisy_countries, df[i, "country_code"])
} else {
next
}
}
} else {
noisy_countries <- c()
for(i in 1:nrow(df)) {
if(sum(is.na(df[i, ])) / ncol(df) > 0.3) {
noisy_countries <- c(noisy_countries, df[i, "country"])
} else {
next
}
}
}
return(noisy_countries)
}
noisy_c <- get_noisy_countries(mydata)
noisy_c
remove_noisy_vars <- function(df) {
cols_pos <- c()
for(i in 1:ncol(df)) {
if(sum(is.na(df[, i])) / nrow(df) > 0.30) {
cols_pos <- c(cols_pos, i)
} else {
next
}
}
return(cols_pos)
}
cols_pos <- remove_noisy_vars(mydata)
mydata <- mydata[, -cols_pos]
noisy_c <- get_noisy_countries(mydata)
noisy_c
library(VIM)
aggr_plot <- aggr(mydata, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(mydata), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
mydata_df <- mydata
mydata_numeric <-  data.frame(sapply(mydata[ , -c(1,2)], as.numeric))
mydata_df$country <- countries_and_codes_total$country[countries_and_codes_total$country_code %in% mydata$country_code]
mydata_df[duplicated(mydata_df$), ]
mydata_df[duplicated(mydata_df$country_code), ]
mydata_df[duplicated(mydata_df$country_code), "country"]
mydata_df[duplicated(mydata_df$country_code), "country_code"]
library(VIM)
aggr_plot <- aggr(mydata, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(mydata), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
mydata_df <- mydata
mydata_numeric <-  data.frame(sapply(mydata[ , -c(1,2)], as.numeric))
mydata_df <- mydata_df[!duplicated(mydata_df$country_code), ]
library(VIM)
aggr_plot <- aggr(mydata, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(mydata), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
mydata_df <- mydata
mydata_numeric <-  data.frame(sapply(mydata[ , -c(1,2)], as.numeric))
mydata_df <- mydata_df[!duplicated(mydata_df$country_code), ]
require(lava)
mydata2 <- mydata_df[mydata_df$country %ni% noisy_c, ]
aggr_plot <- aggr(mydata2, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(mydata), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
mydata2$internet_usage <- NULL
mydata2$matern_leave <- NULL
mydata2$gdp <- NULL
mydata2$BoP <- NULL
#mydata2$cell_subscr <- NULL
mydata2$contr_fam_workers <- NULL
mydata2$refugees <- NULL
#mydata2$health <- NULL
mydata2$education <- NULL
#mydata2$co2 <- NULL
#mydata2$renew_electr <- NULL
mydata2$int_forgiven <- NULL
mydata2$imf_charges <- NULL
mydata2$int_prop <- NULL
mydata2$food_deficit <- NULL
mydata2$patent_nr <- NULL
mydata2$patent_r <- NULL
#mydata2$sci_jour <- NULL
mydata2$trademark.app <- NULL
mydata2$hightech_exp <- NULL
mydata2$int_tr_bal <- NULL
mydata2$eco_ind <- NULL
mydata2$fem_to_male_part_rate <- NULL
mydata2$lab_force_fem <- NULL
mydata2$co2 <- NULL
mydata2$health <- NULL
mydata2$sci_jour <- NULL
mydata2$cell_subscr <- NULL
if(!require(mice)) {
install.packages("mice")
}
countries_and_regions <- country_profile_vars[ , c("country_code", "Region")]
names(countries_and_regions) <- c("country_code", "region")
mydata2 <- merge(mydata2, countries_and_regions, on = "country_code", all.x = T)
mydata2$region <- as.factor(mydata2$region)
mydata2$country_code <- NULL
countries <- mydata2$country
mydata2$country <- NULL
mydata_imputed <- mice(mydata2, m=1, method='rf', printFlag=FALSE)
View(mydata2)
mydata_imputed <- mice(mydata2, m=1, method='rf', printFlag=FALSE)
names(mydata2)
View(mydata2)
mice(mydata2, m=1, method='rf', printFlag=FALSE)
mydata_imputed <- mice(mydata2, m=1, method='cart', printFlag=FALSE)
df <-  fread('Modelar_UH2019.txt', encoding = 'Latin-1')
library(doParallel)
library(data.table)
require(caretEnsemble)
getwd()
setwd("~/00/EquipoGamma/datos_originales")
setwd("C:/Users/gvargas/00 - Máster Data Science AFI/21 - Análisis de Series Temporales y Datos de Panel/Series Temporales")
setwd("C:/Users/gvargas/Downloads/Datasets_Reto_Modelling_UH2019/Datasets_Reto_Modelling_UH2019")
setwd("~/cajamar2/EquipoGamma/Exploratorio")
#df <- fread('Estimar_UH2019.txt', encoding = 'UTF-8')
df <- fread('Modelar_UH2019.txt', encoding = 'UTF-8')
## EXPLORATORIO VARIABLES
library(data.table)
library(dplyr)
library(ggplot2)
library(outliers)
#df <- fread('Estimar_UH2019.txt', encoding = 'UTF-8')
df <- fread('Modelar_UH2019.txt', encoding = 'UTF-8')
#df1 es el dataframe que iré modificando
df1 <- df
rm(list=ls())
## EXPLORATORIO VARIABLES
library(data.table)
library(dplyr)
library(ggplot2)
library(outliers)
#df <- fread('Estimar_UH2019.txt', encoding = 'UTF-8')
df <- fread('Modelar_UH2019.txt', encoding = 'UTF-8')
#df1 es el dataframe que iré modificando
df1 <- df
unique(df$HY_provincia)
# Para Gustavo
names(df)[25:52]
#NA
apply(apply(df,2,is.na),2,sum) #nas by variable
apply(apply(df,2,is.na),1,sum) #nas by country
# No hay mucha relación entre la construcción de la década de los 90 y el target
df1 %>%
ggplot(aes(x = IDEA_pc_1990_99, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
boxplot(df$IDEA_pc_comercio)
hist(df$IDEA_pc_comercio)
summary(df$IDEA_pc_comercio)
# No hay mucha relación con el IDEA_pc_comercio con el target, si acaso es ligeramente negativa
df1 %>%
ggplot(aes(x = IDEA_pc_comercio, y = TARGET)) +
geom_point(alpha=0.1)
## EXPLORATORIO VARIABLES
library(data.table)
library(dplyr)
library(ggplot2)
library(outliers)
#df <- fread('Estimar_UH2019.txt', encoding = 'UTF-8')
df <- fread('Modelar_UH2019.txt', encoding = 'UTF-8')
#df1 es el dataframe que iré modificando
df1 <- df
unique(df$HY_provincia)
# Para Álex
names(df)[1:25]
# Para Gustavo
names(df)[25:52]
df1$comercio_na <- ifelse(is.na(df1$IDEA_pc_comercio), 1, 0)
df1 %>%
group_by(comercio_na) %>%
ggplot(aes(x = comercio_na, y = TARGET)) +
geom_point()
df1 %>%
group_by(comercio_na) %>%
summarise(target = mean(TARGET))
boxplot(df$IDEA_pc_industria)
hist(df$IDEA_pc_industria)
summary(df$IDEA_pc_industria)
table(df$IDEA_pc_industria)
df1 %>%
ggplot(aes(x = IDEA_pc_industria, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
df1$indus_na <- ifelse(df1$IDEA_pc_industria, 1, 0)
df1 %>%
group_by(indus_na) %>%
ggplot(aes(x = indus_na, y = TARGET))
df1 %>%
group_by(indus_na) %>%
ggplot(aes(x = indus_na, y = TARGET)) +
geom_point()
boxplot(df$IDEA_pc_oficina)
hist(df$IDEA_pc_oficina)
summary(df$IDEA_pc_oficina)
table(df$IDEA_pc_oficina)
df1 %>%
ggplot(aes(x = IDEA_pc_oficina, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
df1 %>%
group_by(indus_na, HY_tipo) %>%
ggplot(aes(x = indus_na, y = TARGET, color = HY_tipo)) +
geom_point()
df1 %>%
group_by(indus_na, HY_tipo) %>%
summarise(target = mean(TARGET)) %>%
ggplot(aes(x = indus_na, y = target, color = HY_tipo)) +
geom_point()
boxplot(df$IDEA_pc_oficina)
hist(df$IDEA_pc_oficina)
summary(df$IDEA_pc_oficina)
table(df$IDEA_pc_oficina)
df1 %>%
ggplot(aes(x = IDEA_pc_oficina, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
names(df1)[25:52]
df1$naofic <- ifelse(is.na(df1$IDEA_pc_oficina), 1, 0)
df1 %>%
group_by(naofic, HY_tipo) %>%
summarise(target = mean(TARGET)) %>%
ggplot(aes(x = naofic, y = target, color = HY_tipo)) +
geom_point()
boxplot(df$IDEA_pc_otros)
hist(df$IDEA_pc_otros)
summary(df$IDEA_pc_otros)
table(df$IDEA_pc_otros)
# relación mucho más débil que el resto
df1 %>%
ggplot(aes(x = IDEA_pc_otros, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
df1$otrosna <- ifelse(is.na(df1$IDEA_pc_otros), 1, 0 )
df1 %>%
group_by(otrosna, HY_tipo) %>%
summarise(target = mean(TARGET)) %>%
ggplot(aes(x = otrosna, y = target, color = HY_tipo))
df1 %>%
group_by(otrosna, HY_tipo) %>%
summarise(target = mean(TARGET)) %>%
ggplot(aes(x = otrosna, y = target, color = HY_tipo)) +
geom_point()
boxplot(df$IDEA_pc_residencial)
hist(df$IDEA_pc_residencial)
summary(df$IDEA_pc_residencial)
# no hay relación con la variable TARGET
df1 %>%
ggplot(aes(x = IDEA_pc_residencial, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
# no hay relación con la variable TARGET
df1 %>%
ggplot(aes(x = IDEA_pc_residencial, y = TARGET)) +
geom_point(alpha=1) +
geom_smooth(method = "loess", se = F)
df1$resid <- ifelse(df1$IDEA_pc_residencial < 0.375 | df1$IDEA_pc_residencial > 0.675, 0, 1)
df1 %>%
group_by(resid) %>%
summarise(target = mean(TARGET))
boxplot(df$IDEA_pc_trast_parking)
hist(df$IDEA_pc_trast_parking)
summary(df$IDEA_pc_trast_parking)
# no hay relación con la variable TARGET
df1 %>%
ggplot(aes(x = IDEA_pc_trast_parking, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
boxplot(df$IDEA_ind_tienda)
hist(df$IDEA_ind_tienda)
summary(df$IDEA_ind_tienda)
table(df$IDEA_ind_tienda)
# no hay relación con la variable TARGET
df1 %>%
ggplot(aes(x = IDEA_ind_tienda, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
# no hay relación con la variable TARGET
df1 %>%
ggplot(aes(x = log1p(IDEA_ind_tienda), y = log1p(TARGET))) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
# no hay relación con la variable TARGET
df1 %>%
ggplot(aes(x = log1p(IDEA_ind_tienda), y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
df1$tiendaNa <- ifelse(is.na(df1$IDEA_ind_tienda), 1, 0)
df1 %>%
group_by(tiendaNa, HY_tipo) %>%
summarise(target = mean(TARGET)) %>%
ggplot(aes(x = tiendaNa, y = target, color = HY_tipo)) +
geom_point()
boxplot(df$IDEA_ind_turismo)
hist(df$IDEA_ind_turismo)
summary(df$IDEA_ind_turismo)
table(df$IDEA_ind_turismo)
# no hay relación con la variable TARGET
df1 %>%
ggplot(aes(x = IDEA_ind_turismo, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
df1 %>%
group_by(turismona, HY_tipo) %>%
summarise(target = mean(TARGET)) %>%
ggplot(aes(x = turismona, y = target, color = HY_tipo)) +
geom_point()
df1$turismona <- ifelse(is.na(df1$IDEA_ind_turismo), 1, 0)
df1 %>%
group_by(turismona, HY_tipo) %>%
summarise(target = mean(TARGET)) %>%
ggplot(aes(x = turismona, y = target, color = HY_tipo)) +
geom_point()
names(df1)[25:52]
boxplot(df$IDEA_ind_liquidez)
hist(df$IDEA_ind_liquidez)
summary(df$IDEA_ind_liquidez)
table(df$IDEA_ind_liquidez)
# no hay relación con la variable TARGET
df1 %>%
ggplot(aes(x = IDEA_ind_liquidez, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
df1$liquidezNA <- ifelse(df1$IDEA_ind_liquidez, 1, 0)
df1 %>%
group_by(liquidezNA) %>%
ggplot(aes(x = liquidezNA, y = TARGET)) +
geom_point()
df1$liquidezNA <- ifelse(is.na(df1$IDEA_ind_liquidez), 1, 0)
df1 %>%
group_by(liquidezNA) %>%
ggplot(aes(x = liquidezNA, y = TARGET)) +
geom_point()
df1 %>%
group_by(liquidezNA, HY_tipo) %>%
summarise(target = mean(TARGET)) %>%
ggplot(aes(x = liquidezNA, y = target, color = HY_tipo)) +
geom_point()
boxplot(df$GA_page_views)
hist(df$GA_page_views)
summary(df$GA_page_views)
tail(table(df$GA_page_views))
df1 %>%
ggplot(aes(x = log1p(GA_page_views), y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
boxplot(df$GA_page_views)
hist(df$GA_page_views)
summary(df$GA_page_views)
tail(table(df$GA_page_views))
df1 %>%
ggplot(aes(x = log1p(GA_page_views), y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
boxplot(df$GA_mean_bounce)
hist(df$GA_mean_bounce)
summary(df$GA_mean_bounce)
tail(table(df$GA_mean_bounce))
df1 %>%
ggplot(aes(x = GA_mean_bounce, y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
df1 %>%
ggplot(aes(x = log1p(GA_mean_bounce), y = TARGET)) +
geom_point(alpha=0.1) +
geom_smooth(method = "loess", se = F)
df1$tiene_texto <- ifelse(is.na(df1$HY_descripcion), 0, 1)
df1 %>% group_by(tiene_texto) %>% ggplot(aes(x = tiene_texto, y = TARGET)) + geom_point()
sum(is.na(df1$HY_descripcion))
sum(is.na(df1$HY_distribucion))
View(df1)
sum(df1$HY_descripcion == "")
df1$tiene_texto <- ifelse(df1$HY_descripcion != "", 0, 1)
df1 %>% group_by(tiene_texto) %>% ggplot(aes(x = tiene_texto, y = TARGET)) + geom_point()
df1 %>% group_by(tiene_texto) %>% summarise(target = mean(TARGET)) %>% ggplot(aes(x = tiene_texto, y = target)) + geom_point()
df1$tiene_distr <- ifelse(df1$HY_distribucion != "", 0, 1)
df1 %>% group_by(tiene_distr) %>% summarise(target = mean(TARGET)) %>% ggplot(aes(x = tiene_distr, y = target)) + geom_point()
