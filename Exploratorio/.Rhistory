setwd("~/Selección y generación de variables/ejemplo_R")
rm(list = ls())
library(dplyr)
library(ggplot2)
data_path <- 'data/cs-training.csv'
cs_data <- read.table(data_path, sep = ',', header = T, stringsAsFactors = F)
str(cs_data)
cs_data <- cs_data[, 2:12]
cs_data$SeriousDlqin2yrs <- as.factor(cs_data$SeriousDlqin2yrs)
table(cs_data$SeriousDlqin2yrs)
prior_pd <- sum(cs_data$SeriousDlqin2yrs == 1)/nrow(cs_data) # Around 6.7% of defaults
summary(cs_data)
ggplot(data = cs_data,
aes(x = is.na(MonthlyIncome))) +
geom_bar(aes(fill = SeriousDlqin2yrs),
position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
ggplot(data = cs_data,
aes(x = is.na(NumberOfDependents))) +
geom_bar(aes(fill = SeriousDlqin2yrs),
position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
cs_data$MonthlyIncome[is.na(cs_data$MonthlyIncome)] <- median(cs_data$MonthlyIncome, na.rm = T)
cs_data$NumberOfDependents[is.na(cs_data$NumberOfDependents)] <- median(cs_data$NumberOfDependents, na.rm = T)
summary(cs_data$RevolvingUtilizationOfUnsecuredLines)
ggplot(cs_data,
aes(x = 1, y = RevolvingUtilizationOfUnsecuredLines)) +
geom_boxplot()
ggplot(cs_data,
aes(x = RevolvingUtilizationOfUnsecuredLines)) +
geom_histogram()
sum(cs_data$RevolvingUtilizationOfUnsecuredLines > 100)/nrow(cs_data) # Less than 0.15% of wrong-values, clear outliers. What happens with target variable?
cs_data %>% filter(RevolvingUtilizationOfUnsecuredLines > 100) %>%
ggplot(aes(x = 1)) +
geom_bar(aes(fill = SeriousDlqin2yrs),
position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
cs_data$RevolvingUtilizationOfUnsecuredLines[cs_data$RevolvingUtilizationOfUnsecuredLines > 100] <- median(cs_data$RevolvingUtilizationOfUnsecuredLines[cs_data$RevolvingUtilizationOfUnsecuredLines <= 100])
summary(cs_data$RevolvingUtilizationOfUnsecuredLines)
ggplot(cs_data,
aes(x = 1, y = RevolvingUtilizationOfUnsecuredLines)) +
geom_boxplot()
ggplot(cs_data,
aes(x = RevolvingUtilizationOfUnsecuredLines)) +
geom_histogram()
ggplot(cs_data,
aes(x = RevolvingUtilizationOfUnsecuredLines)) +
geom_histogram(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
IQR <- quantile(cs_data$RevolvingUtilizationOfUnsecuredLines, 0.75) - quantile(cs_data$RevolvingUtilizationOfUnsecuredLines, 0.25)
Me15IQR <- median(cs_data$RevolvingUtilizationOfUnsecuredLines) + 1.5*IQR
cs_data <- cs_data %>% mutate(OutlierRevolvingUtilizationOfUnsecuredLines = RevolvingUtilizationOfUnsecuredLines > Me15IQR)
cs_data$RevolvingUtilizationOfUnsecuredLines[cs_data$RevolvingUtilizationOfUnsecuredLines > Me15IQR] <- Me15IQR
ggplot(cs_data,
aes(x = RevolvingUtilizationOfUnsecuredLines)) +
geom_histogram(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
summary(cs_data$age)
ggplot(cs_data,
aes(x = 1, y = age)) +
geom_boxplot()
ggplot(cs_data,
aes(x = age)) +
geom_histogram()
sum(cs_data$age < 18)
cs_data <- cs_data[cs_data$age >= 18, ]
ggplot(cs_data,
aes(x = age)) +
geom_histogram(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
IQR <- quantile(cs_data$age, 0.75) - quantile(cs_data$age, 0.25)
Me15IQR <- median(cs_data$age) + 1.5*IQR
cs_data <- cs_data %>% mutate(OutlierAge = age > Me15IQR)
cs_data$age[cs_data$OutlierAge] <- Me15IQR
ggplot(cs_data,
aes(x = age)) +
geom_histogram(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
summary(cs_data$NumberOfTime30.59DaysPastDueNotWorse)
ggplot(cs_data,
aes(x = 1, y = NumberOfTime30.59DaysPastDueNotWorse)) +
geom_boxplot()
ggplot(cs_data,
aes(x = NumberOfTime30.59DaysPastDueNotWorse)) +
geom_histogram()
cs_data <- cs_data %>% mutate(Anytime30.59DaysPastDueNotWorse = NumberOfTime30.59DaysPastDueNotWorse > 0)
ggplot(cs_data,
aes(x = Anytime30.59DaysPastDueNotWorse)) +
geom_bar(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
summary(cs_data$DebtRatio)
ggplot(cs_data,
aes(x = 1, y = DebtRatio)) +
geom_boxplot()
ggplot(cs_data,
aes(x = DebtRatio)) +
geom_histogram()
IQR <- quantile(cs_data$DebtRatio, 0.75) - quantile(cs_data$DebtRatio, 0.25)
Me15IQR <- median(cs_data$DebtRatio) + 1.5*IQR
cs_data <- cs_data %>% mutate(OutlierDebtRatio = DebtRatio > Me15IQR)
cs_data$DebtRatio[cs_data$OutlierDebtRatio] <- Me15IQR
ggplot(cs_data,
aes(x = DebtRatio)) +
geom_histogram(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
summary(cs_data$MonthlyIncome)
ggplot(cs_data,
aes(x = 1, y = MonthlyIncome)) +
geom_boxplot()
ggplot(cs_data,
aes(x = MonthlyIncome)) +
geom_histogram()
IQR <- quantile(cs_data$MonthlyIncome, 0.75) - quantile(cs_data$MonthlyIncome, 0.25)
Me15IQR <- median(cs_data$MonthlyIncome) + 1.5*IQR
cs_data <- cs_data %>% mutate(OutlierMonthlyIncome = MonthlyIncome > Me15IQR)
cs_data$MonthlyIncome[cs_data$OutlierMonthlyIncome] <- Me15IQR
ggplot(cs_data,
aes(x = MonthlyIncome)) +
geom_histogram(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
summary(cs_data$NumberOfOpenCreditLinesAndLoans)
ggplot(cs_data,
aes(x = 1, y = NumberOfOpenCreditLinesAndLoans)) +
geom_boxplot()
ggplot(cs_data,
aes(x = NumberOfOpenCreditLinesAndLoans)) +
geom_histogram()
ggplot(cs_data,
aes(x = NumberOfOpenCreditLinesAndLoans)) +
geom_histogram(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
cs_data <- cs_data %>% mutate(Anytime90DaysLate = NumberOfTimes90DaysLate > 0)
ggplot(cs_data,
aes(x = Anytime90DaysLate)) +
geom_bar(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
summary(cs_data$NumberRealEstateLoansOrLines)
ggplot(cs_data,
aes(x = 1, y = NumberRealEstateLoansOrLines)) +
geom_boxplot()
ggplot(cs_data,
aes(x = NumberRealEstateLoansOrLines)) +
geom_histogram()
ggplot(cs_data,
aes(x = NumberRealEstateLoansOrLines)) +
geom_histogram(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
cs_data <- cs_data %>% mutate(Anytime60.89DaysPastDueNotWorse = NumberOfTime60.89DaysPastDueNotWorse > 0)
ggplot(cs_data,
aes(x = Anytime60.89DaysPastDueNotWorse)) +
geom_bar(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
summary(cs_data$NumberOfDependents)
ggplot(cs_data,
aes(x = 1, y = NumberOfDependents)) +
geom_boxplot()
ggplot(cs_data,
aes(x = NumberOfDependents)) +
geom_histogram()
cs_data$NumberOfDependents[cs_data$NumberOfDependents > 4] <- 4
cs_data$NumberOfDependents <- as.factor(cs_data$NumberOfDependents)
ggplot(cs_data,
aes(x = NumberOfDependents)) +
geom_bar(aes(fill = SeriousDlqin2yrs), position = 'fill') +
geom_hline(aes(yintercept = prior_pd), linetype = 'dashed')
cs_data$MonthlyIncomeNormalized <- (cs_data$MonthlyIncome - min(cs_data$MonthlyIncome))/(max(cs_data$MonthlyIncome) - min(cs_data$MonthlyIncome))
library(caret)
set.seed(42)
ctrl <- trainControl(method = 'cv',
number = 10)
rlog_model <- train(SeriousDlqin2yrs ~ RevolvingUtilizationOfUnsecuredLines + DebtRatio + MonthlyIncomeNormalized +
Anytime90DaysLate + Anytime60.89DaysPastDueNotWorse + Anytime30.59DaysPastDueNotWorse,
data = cs_data,
trControl = ctrl,
method = 'glm',
family = binomial(link = 'logit'))
print(rlog_model)
summary(rlog_model)
confusionMatrix(rlog_model)
lda_model <- train(SeriousDlqin2yrs ~ RevolvingUtilizationOfUnsecuredLines + DebtRatio + MonthlyIncomeNormalized +
Anytime90DaysLate + Anytime60.89DaysPastDueNotWorse + Anytime30.59DaysPastDueNotWorse,
data = cs_data,
trControl = ctrl,
method = 'lda')
print(lda_model)
summary(lda_model)
confusionMatrix(lda_model)
nb_model <- train(SeriousDlqin2yrs ~ RevolvingUtilizationOfUnsecuredLines + DebtRatio + MonthlyIncomeNormalized +
Anytime90DaysLate + Anytime60.89DaysPastDueNotWorse + Anytime30.59DaysPastDueNotWorse,
data = cs_data,
trControl = ctrl,
method = 'nb')
print(nb_model)
summary(nb_model)
confusionMatrix(nb_model)
tree_model <- train(SeriousDlqin2yrs ~ RevolvingUtilizationOfUnsecuredLines + DebtRatio + MonthlyIncomeNormalized +
Anytime90DaysLate + Anytime60.89DaysPastDueNotWorse + Anytime30.59DaysPastDueNotWorse,
data = cs_data,
trControl = ctrl,
method = 'rpart')
## EXPLORATORIO VARIABLES
library(data.table)
library(dplyr)
library(ggplot2)
library(outliers)
df <-  fread('Modelar_UH2019.txt', encoding = 'UTF-8')
setwd("~/cajamar2/EquipoGamma/Exploratorio")
df <-  fread('Modelar_UH2019.txt', encoding = 'UTF-8')
str(df)
names(df)[1:25]
df$HY_id <- as.character(df$HY_id)
df$HY_provincia <- as.factor(df$HY_provincia)
df %>%
group_by(HY_provincia) %>%
summarise(media_target = mean(TARGET)) %>%
ggplot(aes(x = HY_provincia, y = media_target)) +
geom_point()
provincias <- fread('provincias.csv', encoding = "UTF-8")
unique(df$HY_provincia)
df %>%
group_by(HY_provincia) %>%
summarise(media_target = mean(TARGET)) %>%
ggplot(aes(x = HY_provincia)) +
geom_bar(stat='mean')
df %>%
group_by(HY_provincia) %>%
summarise(media_target = mean(TARGET)) %>%
ggplot(aes(x = HY_provincia)) +
geom_bar(stat='count')
df %>%
group_by(HY_provincia) %>%
summarise(media_target = mean(TARGET)) %>%
ggplot(aes(x = HY_provincia)) +
geom_bar(stat=media_target)
df %>%
group_by(HY_provincia) %>%
summarise(media_target = mean(TARGET)) %>%
ggplot(aes(x = HY_provincia, y = media_target)) +
geom_bar(stat = 'identity')
df %>%
group_by(HY_provincia) %>%
summarise(media_target = mean(TARGET)) %>%
ggplot(aes(x = HY_provincia, y = media_target)) +
geom_bar(stat = 'identity')+
coord_flip()
df %>%
group_by(HY_provincia) %>%
summarise(media_target = mean(TARGET)) %>%
ggplot(aes(x = reorder(HY_provincia, media_target), y = media_target)) +
geom_bar(stat = 'identity')+
coord_flip()
df %>%
group_by(HY_tipo) %>%
summarise(media_target = mean(TARGET)) %>%
ggplot(aes(x = HY_tipo, y = media_target)) +
geom_point()
df %>%
group_by(HY_tipo) %>%
summarise(media_target = mean(TARGET)) %>%
ggplot(aes(x = reorder(HY_tipo, media_target), y = media_target)) +
geom_bar(stat = "identity") +
coord_flip()
